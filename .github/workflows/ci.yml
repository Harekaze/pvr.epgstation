name: CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ format('{0}-{1}', matrix.os, matrix.version) }}
    strategy:
      matrix:
        os: [ubuntu, windows, macOS]
        version: [latest]
        mobile: [true, false]
        unix-like: [true]
        exclude:
          - os: windows
            mobile: true
        include:
          - mobile: false
            platform: ${{ format('{0}-x64', matrix.os) }}
          - mobile: false
            os: windows
            platform: ${{ format('{0}-x86', matrix.os) }}
            unix-like: false
          - os: macOS
            mobile: true
            args: --host=arm-apple-darwin
            platform: ios-arm64
          - os: ubuntu
            mobile: true
            platform: android-armv7a
            unix-like: false
          - os: ubuntu
            version: 20.04
            args: --host=arm-linux-gnueabihf
            platform: rpi-armv7
            unix-like: true
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      # Windows Build
      - name: build (windows)
        if: matrix.os == 'windows'
        run: ./build.ps1
        shell: powershell
      # Android Build
      - name: build (android)
        if: matrix.platform == 'android-armv7a'
        run: /usr/local/lib/android/sdk/ndk-bundle/ndk-build APP_ABI=armeabi-v7a
      # macOS Prepare
      - name: prepare (macos)
        if: matrix.os == 'macOS'
        run: brew install libtool automake
      # Raspberry Pi Prepare
      - name: prepare (raspberry pi)
        if: matrix.platform == 'rpi-armv7'
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends g++-arm-linux-gnueabihf
      # Unix-like Build
      - name: bootstrap
        if: matrix.unix-like
        run: ./bootstrap
      - name: configure
        if: matrix.unix-like
        run: ./configure ${{ matrix.args }}
      - name: make
        if: matrix.unix-like
        run: make
      # Upload artifact
      - name: upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{format('pvr.epgstation.{0}-{1}', matrix.platform, github.sha)}}
          path: dist/pvr.epgstation
