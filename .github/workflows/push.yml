name: CI

on:
  push:
    tags-ignore:
      - "v*"
    branches:
      - "develop"
      - "master"
    paths-ignore:
      - "template/**"
  pull_request:

jobs:
  build:
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        include:
          - platform: macOS-x64
            os: macOS-latest
            unix-like: true
          - platform: windows-x64
            os: windows-latest
          - platform: ios-arm64
            os: macOS-latest
            unix-like: true
            args: --host=arm-apple-darwin
          - platform: android-armv7a
            os: ubuntu-latest
          - platform: linux-armv7
            os: ubuntu-latest
            unix-like: true
            args: --host=arm-linux-gnueabihf
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      # Windows Build
      - name: build (windows)
        if: matrix.os == 'windows-latest'
        run: ./build.ps1
        shell: powershell
      # Android Build
      - name: build (android)
        if: matrix.platform == 'android-armv7a'
        run: |
          /usr/local/lib/android/sdk/ndk-bundle/ndk-build APP_ABI=armeabi-v7a
          ./jni/pack.sh APP_ABI=armeabi-v7a
      # macOS build tools Setup
      - name: setup (macos)
        if: matrix.os == 'macOS-latest'
        run: brew install libtool automake
      # Linux ARMv7 cross compiler Setup
      - name: setup (linux-armv7)
        if: matrix.platform == 'linux-armv7'
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends g++-arm-linux-gnueabihf
      # Unix-like Build
      - name: build (unix-like)
        if: matrix.unix-like
        run: |
          ./bootstrap
          ./configure ${{ matrix.args }}
          make
      # Copy Linux ARMv7 binary
      - name: duplicate (linux-armv7)
        if: matrix.platform == 'linux-armv7'
        run: cp -a dist/pvr.epgstation/pvr.epgstation.armel.so dist/pvr.epgstation/pvr.epgstation.so
      # Upload artifact
      - name: upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{format('pvr.epgstation.{0}-{1}', matrix.platform, github.sha)}}
          path: dist
